from pathlib import Path
from snakemake.utils import min_version

min_version("6.0")

configfile: "config/config.yaml"
configfile: "config/targets.yaml"
configfile: "config/report.yaml"


def iter_lines(file_path):
    with open(file_path) as f:
        for line in f:
            yield line.strip()


def iter_files(file_type: str):
    for sample_name in config["SAMPLES"]:
        for file_name in sample["file_type"]:
            yield file


def iter_samples():
    for sample_name in config["SAMPLES"]:
        yield sample_name


# Targets
## Output
OUTPUT_NAME = config["OUTPUT_NAME"]
OUTDIR = Path(config["OUTPUT_DIRECTORY"])
OUTDIR.mkdir(parents=True, exist_ok=True)


## Data folders
BAM_FOLDER = Path(config["BAM_FOLDER"])
FASTA_FOLDER = Path(config["FASTA_FOLDER"])
## Metadata table
METADATA = Path(config["METADATA"])


# Tree parameters
ETC_TREE_PARAMS = []
## UFBoot
if config["N_UFBOOT"] != 0:
    ETC_TREE_PARAMS.append(f"-B {config['N_UFBOOT']:d}")
ETC_TREE_PARAMS = " ".join(ETC_TREE_PARAMS)


# Rules
include: "rules/fetch.smk"
include: "rules/fasta.smk"
include: "rules/asr.smk"
include: "rules/demix.smk"
include: "rules/vaf.smk"
include: "rules/pangolin.smk"
include: "rules/distances.smk"
include: "rules/evolution.smk"
include: "rules/report.smk"


rule all:
    input:
        f"{OUTPUT_NAME}.report.html",
        OUTDIR/f"{OUTPUT_NAME}.lineage_report.csv"
